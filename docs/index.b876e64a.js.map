{"mappings":"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","sources":["js/uiElements.js","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/isDate/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/date-fns/esm/isValid/index.js","node_modules/js-cookie/dist/js.cookie.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/subMilliseconds/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","node_modules/date-fns/esm/_lib/format/formatters/index.js","node_modules/date-fns/esm/_lib/getUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","node_modules/date-fns/esm/_lib/format/longFormatters/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns/esm/_lib/protectedTokens/index.js","node_modules/date-fns/esm/format/index.js","js/config.js","js/message.js","node_modules/date-fns/esm/getTime/index.js","js/modal.js","js/view.js","js/main.js"],"sourcesContent":["export const UI_ELEMENTS = {\r\n  SETTINGS: document.querySelector(\"[data-modal='settings']\"),\r\n  CONFIRMATION: document.querySelector(\"[data-modal='confirmation']\"),\r\n  AUTHORIZATION: document.querySelector(\"[data-modal='authorization']\"),\r\n  EXIT: document.querySelector(\".chat__btn--exit\"),\r\n  LOGIN: document.querySelector(\".modal__form--login\"),\r\n  CHANGE_NAME: document.querySelector(\".modal__form--settings\"),\r\n  NAME: document.querySelector(\"[name='name']\"),\r\n  FORM: document.querySelector(\".chat__form\"),\r\n  INPUT: document.querySelector(\".chat__input\"),\r\n  MESSAGES: document.querySelector(\".chat__list\"),\r\n};\r\n\r\nexport const MODAL = {\r\n  SETTINGS: document.querySelector(\"#settings\"),\r\n  CONFIRMATION: document.querySelector(\"#confirmation\"),\r\n  AUTHORIZATION: document.querySelector(\"#authorization\"),\r\n  FORM_CODE: document.querySelector(\".modal__form--code\"),\r\n};\r\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","/*! js-cookie v3.0.1 | MIT */\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, (function () {\n    var current = global.Cookies;\n    var exports = global.Cookies = factory();\n    exports.noConflict = function () { global.Cookies = current; return exports; };\n  }()));\n}(this, (function () { 'use strict';\n\n  /* eslint-disable no-var */\n  function assign (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target\n  }\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n  var defaultConverter = {\n    read: function (value) {\n      if (value[0] === '\"') {\n        value = value.slice(1, -1);\n      }\n      return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n    },\n    write: function (value) {\n      return encodeURIComponent(value).replace(\n        /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n        decodeURIComponent\n      )\n    }\n  };\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n  function init (converter, defaultAttributes) {\n    function set (key, value, attributes) {\n      if (typeof document === 'undefined') {\n        return\n      }\n\n      attributes = assign({}, defaultAttributes, attributes);\n\n      if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n      }\n      if (attributes.expires) {\n        attributes.expires = attributes.expires.toUTCString();\n      }\n\n      key = encodeURIComponent(key)\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n        .replace(/[()]/g, escape);\n\n      var stringifiedAttributes = '';\n      for (var attributeName in attributes) {\n        if (!attributes[attributeName]) {\n          continue\n        }\n\n        stringifiedAttributes += '; ' + attributeName;\n\n        if (attributes[attributeName] === true) {\n          continue\n        }\n\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n      }\n\n      return (document.cookie =\n        key + '=' + converter.write(value, key) + stringifiedAttributes)\n    }\n\n    function get (key) {\n      if (typeof document === 'undefined' || (arguments.length && !key)) {\n        return\n      }\n\n      // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all.\n      var cookies = document.cookie ? document.cookie.split('; ') : [];\n      var jar = {};\n      for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        var value = parts.slice(1).join('=');\n\n        try {\n          var foundKey = decodeURIComponent(parts[0]);\n          jar[foundKey] = converter.read(value, foundKey);\n\n          if (key === foundKey) {\n            break\n          }\n        } catch (e) {}\n      }\n\n      return key ? jar[key] : jar\n    }\n\n    return Object.create(\n      {\n        set: set,\n        get: get,\n        remove: function (key, attributes) {\n          set(\n            key,\n            '',\n            assign({}, attributes, {\n              expires: -1\n            })\n          );\n        },\n        withAttributes: function (attributes) {\n          return init(this.converter, assign({}, this.attributes, attributes))\n        },\n        withConverter: function (converter) {\n          return init(assign({}, this.converter, converter), this.attributes)\n        }\n      },\n      {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n      }\n    )\n  }\n\n  var api = init(defaultConverter, { path: '/' });\n  /* eslint-enable no-var */\n\n  return api;\n\n})));\n","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export const URL = {\r\n  AUTORIZATION: \"https://mighty-cove-31255.herokuapp.com/api/user\",\r\n  CHANGE_NAME: \"https://mighty-cove-31255.herokuapp.com/api/user/me\",\r\n};\r\nexport const AUTHOR = {\r\n  USER: \"Я\",\r\n  COMPANION: \"Собеседник мой\",\r\n};\r\n","import { format, getTime } from \"date-fns\";\r\nimport { AUTHOR } from \"./config\";\r\n\r\nexport default class Message {\r\n  constructor(text, author, status, time) {\r\n    this.text = text;\r\n    this.author = author || AUTHOR.USER;\r\n    this.status = status || \"unread\";\r\n    this.time = time || getTime(new Date());\r\n  }\r\n\r\n  createObj() {\r\n    return {\r\n      text: this.text,\r\n      author: this.author,\r\n      status: this.status,\r\n      time: this.time,\r\n    };\r\n  }\r\n\r\n  createItem() {\r\n    this.template = document.querySelector(\"#messageTemplate\");\r\n    this.item = document.createElement(\"li\");\r\n    this.item.classList.add(\"message\");\r\n    this.item.append(this.template.content.cloneNode(true));\r\n    this.itemAuthor = this.item.querySelector(\".message__name\");\r\n    this.itemText = this.item.querySelector(\".message__text\");\r\n    this.itemTime = this.item.querySelector(\".message__time\");\r\n\r\n    const isAuthorNotUser = this.author !== AUTHOR.USER;\r\n    if (isAuthorNotUser) this.item.classList.add(\"message--received\");\r\n    if (this.status) this.item.classList.add(\"message--sent\");\r\n\r\n    this.itemAuthor.textContent = this.author;\r\n    this.itemText.textContent = this.text;\r\n    this.itemTime.textContent = format(new Date(this.time), \"HH:mm\");\r\n\r\n    return this.item;\r\n  }\r\n\r\n  scrollToBottom() {\r\n    this.item.scrollIntoView({\r\n      block: \"end\",\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n}\r\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","function ModalActions(e) {\r\n  this.dataModal = e.target.dataset.modal;\r\n  this.modal = document.querySelector(`#${this.dataModal}`);\r\n  this.closeBtn = this.modal.querySelector(\".modal__close\");\r\n  this.form = this.modal.querySelector(\".modal__form\");\r\n\r\n  this.closeModal = () => {\r\n    this.modal.classList.remove(\"open\");\r\n    this.removeListeners();\r\n  };\r\n\r\n  this.submitCloseModal = () => {\r\n    // this.form.addEventListener(\"submit\", this.closeModal);\r\n  };\r\n\r\n  this.closeModalOutsideOfContent = (event) => {\r\n    if (event.target !== this.modal) return;\r\n    this.closeModal();\r\n  };\r\n\r\n  this.removeListeners = () => {\r\n    this.modal.removeEventListener(\"click\", this.closeModal);\r\n    this.closeBtn.removeEventListener(\"click\", this.closeModal);\r\n    this.modal.removeEventListener(\"click\", this.closeModalOutsideOfContent);\r\n  };\r\n\r\n  this.modal.classList.add(\"open\");\r\n  this.closeBtn.addEventListener(\"click\", this.closeModal);\r\n  this.modal.addEventListener(\"click\", this.closeModalOutsideOfContent);\r\n}\r\n\r\nexport default function newModal(e) {\r\n  return new ModalActions(e);\r\n}\r\n","import Cookies from \"js-cookie\";\r\nimport { UI_ELEMENTS } from \"./uiElements\";\r\nimport Message from \"./message\";\r\nimport newModal from \"./modal\";\r\nimport { URL, AUTHOR } from \"./config\";\r\n\r\nconst MESSAGES = [];\r\n\r\nfunction scrollToBottom() {\r\n  const element = UI_ELEMENTS.MESSAGES.firstElementChild;\r\n  const options = { block: \"end\", behavior: \"smooth\" };\r\n\r\n  element.scrollIntoView(options);\r\n}\r\n\r\nexport function sendMessage(e) {\r\n  e.preventDefault();\r\n  const { value } = UI_ELEMENTS.INPUT;\r\n  if (!value) return;\r\n  const newMessage = new Message(value);\r\n  const newMessageItem = newMessage.createItem();\r\n  MESSAGES.push(newMessage);\r\n  UI_ELEMENTS.MESSAGES.prepend(newMessageItem);\r\n  UI_ELEMENTS.INPUT.value = \"\";\r\n  scrollToBottom();\r\n}\r\n\r\nasync function requestForCode(email) {\r\n  const data = { email };\r\n  const headers = {\r\n    \"Content-Type\": \"application/json;charset=utf-8\",\r\n  };\r\n\r\n  const options = {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers,\r\n  };\r\n\r\n  return fetch(URL.AUTORIZATION, options);\r\n}\r\n\r\nexport async function getCode(e) {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const { value } = e.target.querySelector(\".modal__input\");\r\n    if (!value) return;\r\n    const modal = e.target.closest(\".modal\");\r\n    const response = await requestForCode(value);\r\n    if (!response.ok) throw new Error(\"Ошибка запроса\");\r\n    newModal(e);\r\n    hideMessage(e);\r\n    modal.classList.remove(\"open\");\r\n  } catch (error) {\r\n    showMessage(e, error.message);\r\n  }\r\n}\r\n\r\nfunction showMessage(e, text) {\r\n  const form = e.target;\r\n  const formError = form.querySelector(\".message-error\");\r\n  form.classList.add(\"error\");\r\n  formError.textContent = text;\r\n}\r\n\r\nfunction hideMessage(e) {\r\n  const form = e.target;\r\n  const formError = form.querySelector(\".message-error\");\r\n  if (!formError) return;\r\n  form.classList.remove(\"error\");\r\n}\r\n\r\nexport async function changeName(e) {\r\n  e.preventDefault();\r\n  hideMessage(e);\r\n  const token = Cookies.get(\"token\");\r\n  if (!token) return showMessage(e, \"Вы не авторизованны\");\r\n  hideMessage(e);\r\n\r\n  const input = e.target.querySelector(\".modal__input\");\r\n  const name = input.value;\r\n  const data = { name: `${name}` };\r\n  const headers = {\r\n    Authorization: `Bearer ${token}`,\r\n    \"Content-Type\": \"application/json;charset=utf-8\",\r\n  };\r\n  const options = {\r\n    method: \"PATCH\",\r\n    body: JSON.stringify(data),\r\n    headers,\r\n  };\r\n\r\n  try {\r\n    await fetch(URL.AUTORIZATION, options);\r\n    showMessage(e, \"Вы сменили ник\");\r\n  } catch (error) {\r\n    showMessage(e, \"Ошибка\");\r\n  }\r\n}\r\n\r\nasync function getAccountData(token) {\r\n  const headers = {\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  const options = { headers };\r\n  const response = await fetch(URL.CHANGE_NAME, options);\r\n\r\n  if (!response.ok) throw new Error(\"Ошибка запроса\");\r\n\r\n  const result = await response.json();\r\n  stateUIElements(result);\r\n}\r\n\r\nfunction stateUIElements({ name }) {\r\n  AUTHOR.USER = name || \"Я\";\r\n  UI_ELEMENTS.NAME.value = AUTHOR.USER;\r\n  UI_ELEMENTS.EXIT.style.display = name ? \"block\" : \"none\";\r\n  UI_ELEMENTS.AUTHORIZATION.style.display = name ? \"none\" : \"block\";\r\n}\r\n\r\nexport async function saveToken(e) {\r\n  try {\r\n    e.preventDefault();\r\n    const { value: token } = e.target.querySelector(\".modal__input\");\r\n    if (!token) return;\r\n    await getAccountData(token);\r\n    const date = new Date(new Date().getTime() + 3600 * 1000);\r\n    Cookies.set(\"token\", token, { expires: date });\r\n    const modal = e.target.closest(\".modal\");\r\n    modal.classList.remove(\"open\");\r\n  } catch (error) {\r\n    showMessage(e, \"Введите верный код\");\r\n  }\r\n}\r\n\r\nexport async function loadPage() {\r\n  try {\r\n    const token = Cookies.get(\"token\");\r\n    if (!token) throw new Error(\"Вы не авторизованны\");\r\n    await getAccountData(token);\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    stateUIElements({});\r\n  }\r\n}\r\n\r\nexport function signOut() {\r\n  Cookies.remove(\"token\");\r\n  stateUIElements({});\r\n}","import { UI_ELEMENTS } from \"./uiElements\";\r\nimport {\r\n  sendMessage, getCode, saveToken, changeName, loadPage, signOut,\r\n} from \"./view\";\r\nimport newModal from \"./modal\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  loadPage();\r\n});\r\n\r\nUI_ELEMENTS.SETTINGS.addEventListener(\"click\", newModal);\r\n// UI_ELEMENTS.AUTHORIZATION.addEventListener(\"click\", (e) => newModal(e).submitCloseModal());\r\nUI_ELEMENTS.AUTHORIZATION.addEventListener(\"click\", newModal);\r\nUI_ELEMENTS.CONFIRMATION.addEventListener(\"submit\", getCode);\r\nUI_ELEMENTS.FORM.addEventListener(\"submit\", sendMessage);\r\nUI_ELEMENTS.LOGIN.addEventListener(\"submit\", saveToken);\r\nUI_ELEMENTS.CHANGE_NAME.addEventListener(\"submit\", changeName);\r\nUI_ELEMENTS.EXIT.addEventListener(\"click\", signOut);\r\n"],"names":["$b84d35e10ffe767c$export$6b8c0dabfa626b4f","SETTINGS","document","querySelector","CONFIRMATION","AUTHORIZATION","EXIT","LOGIN","CHANGE_NAME","NAME","FORM","INPUT","MESSAGES","$377d1ce359384586$export$2e2bcd8739ae039","required","args","length","TypeError","$6fd1c9a3eeaafbe4$export$2e2bcd8739ae039","value","arguments","Date","Object","prototype","toString","call","$bce2d00733a79246$export$2e2bcd8739ae039","argument","argStr","getTime","console","warn","Error","stack","NaN","$93a8d45f3f5c7cb9$export$2e2bcd8739ae039","dirtyDate","date","isNaN","Number","$666bc8f27f76152a$exports","assign","target","i","source","key","init","converter1","defaultAttributes","set","attributes","expires","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","get","cookies","jar","parts","slice","join","foundKey","read","e","create","remove","withAttributes","this","converter","withConverter","freeze","path","factory","$1c4e78b8ee7f66d8$var$formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","$1c4e78b8ee7f66d8$export$2e2bcd8739ae039","token","count","options","result","tokenValue","addSuffix","comparison","$05b7040d79e43f9d$export$2e2bcd8739ae039","undefined","width","String","defaultWidth","format","formats","$b99de2b03d4f39be$var$formatLong","full","long","medium","short","time","dateTime","$117705cf2af2348d$var$formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","$eda89c8f88184c82$export$2e2bcd8739ae039","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","$c309fdccb9ef673a$export$2e2bcd8739ae039","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","$c309fdccb9ef673a$var$findIndex","pattern","test","$c309fdccb9ef673a$var$findKey","valueCallback","rest","object","predicate","hasOwnProperty","array","$0ca880ce53ce49f9$export$2e2bcd8739ae039","code","formatDistance","formatLong","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","$a874c42e2166676d$export$2e2bcd8739ae039","Math","ceil","floor","$5fd7da45fede2458$export$2e2bcd8739ae039","dirtyAmount","timestamp","amount","$6673cc5b62dfa592$export$2e2bcd8739ae039","$8b6bcc549b1c1b29$export$2e2bcd8739ae039","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","$56d5b29bd1df6af4$export$2e2bcd8739ae039","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","$4e98b4d5a2488885$export$2e2bcd8739ae039","fourthOfJanuary","$0dfbcd4e04a34858$export$2e2bcd8739ae039","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","$efe8c2ce4ac4bd36$export$2e2bcd8739ae039","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","$5b38b39a484f4993$export$2e2bcd8739ae039","firstWeek","$88335940ad51fc8f$export$2e2bcd8739ae039","targetLength","sign","output","abs","$8dea7dd01f0b97c2$export$2e2bcd8739ae039","y","signedYear","M","getUTCMonth","d","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","$d91e238bf521c720$var$dayPeriodEnum","$d91e238bf521c720$var$formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","$d91e238bf521c720$var$formatTimezoneWithOptionalMinutes","$d91e238bf521c720$var$formatTimezone","$d91e238bf521c720$export$2e2bcd8739ae039","G","unit","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","round","$c4c2445bc457b574$export$2e2bcd8739ae039","I","isoWeek","$e2b4503c694c959a$export$2e2bcd8739ae039","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","$dbfee7256f9ba04c$export$2e2bcd8739ae039","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","t","originalDate","T","$4f085685fa15e740$var$dateLongFormatter","$4f085685fa15e740$var$timeLongFormatter","$4f085685fa15e740$export$2e2bcd8739ae039","p","P","dateTimeFormat","datePattern","timePattern","$6eb366e006a8b659$export$2e2bcd8739ae039","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","$a5375092e28b891e$var$protectedDayOfYearTokens","$a5375092e28b891e$var$protectedWeekYearTokens","$a5375092e28b891e$export$c6cc36aa33304772","indexOf","$a5375092e28b891e$export$c6b49d6dceb604a1","$a5375092e28b891e$export$8073c1ae88f0e727","input","concat","$4e349bc0dbb08c36$var$formattingTokensRegExp","$4e349bc0dbb08c36$var$longFormattingTokensRegExp","$4e349bc0dbb08c36$var$escapedStringRegExp","$4e349bc0dbb08c36$var$doubleQuoteRegExp","$4e349bc0dbb08c36$var$unescapedLatinCharacterRegExp","$4e349bc0dbb08c36$var$cleanEscapedString","$9dfdde2870d5f6f9$export$61abde59b50deb8e","$9dfdde2870d5f6f9$export$4dbed80c3b5323fc","USER","COMPANION","$129deb770407b953$export$2e2bcd8739ae039","constructor","text","author","status","$2189a7e545f8ece8$export$2e2bcd8739ae039","createObj","createItem","template","item","createElement","classList","add","append","content","cloneNode","itemAuthor","itemText","itemTime","textContent","dirtyFormatStr","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","$4e349bc0dbb08c36$export$2e2bcd8739ae039","scrollToBottom","scrollIntoView","block","behavior","$1b599edd948128d1$var$ModalActions","dataModal","dataset","modal","closeBtn","form","closeModal","removeListeners","submitCloseModal","closeModalOutsideOfContent","event","removeEventListener","addEventListener","$1b599edd948128d1$export$2e2bcd8739ae039","$c23a8642c134aff9$var$MESSAGES","$c23a8642c134aff9$var$showMessage","formError","$c23a8642c134aff9$var$hideMessage","async","$c23a8642c134aff9$var$getAccountData","Authorization","response","fetch","ok","$c23a8642c134aff9$var$stateUIElements","json","name","style","display","$parcel$interopDefault","error","log","message","$c23a8642c134aff9$export$a2e58475e09a3523","preventDefault","closest","email","data","method","body","JSON","stringify","$c23a8642c134aff9$var$requestForCode","newMessage","newMessageItem","push","prepend","firstElementChild","headers"],"version":3,"file":"index.b876e64a.js.map"}